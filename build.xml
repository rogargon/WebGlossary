<?xml version="1.0" encoding="UTF-8"?>
<project default="compile">

    <!-- Google App Engine Properties -->
    <property name="appengine.sdk" value="/usr/local/appengine-java-sdk-1.9.0"/>
    <property name="src.java.dir" value="src"/>
    <property name="build.web.dir" value="war"/>
    <property name="test.dir" value="test"/>
    <property name="appengine.http.port" value="8080"/>
    <property name="appengine.debug.port" value="4000"/>
    <property name="jvmargs" value=""/>

    <!-- Import Google App Engine Macros -->
    <import file="${appengine.sdk}/config/user/ant-macros.xml" />

    <path id="project.classpath">
        <pathelement path="${build.web.dir}/WEB-INF/classes" />
        <pathelement path="${test.dir}/classes" />
        <fileset dir="${build.web.dir}/WEB-INF/lib">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${appengine.sdk}/lib">
            <include name="shared/**/*.jar"/>
            <exclude name="shared/jsp/repackaged-appengine-ant-1.7.1.jar" />
        </fileset>
        <!-- Testing framework -->
        <fileset dir="${appengine.sdk}/lib">
            <include name="testing/*.jar" />
        </fileset>
        <fileset dir="${appengine.sdk}/lib">
            <include name="impl/appengine-api-stubs.jar" />
        </fileset>
        <fileset dir="${appengine.sdk}/lib">
            <include name="impl/appengine-api-labs.jar" />
        </fileset>
    </path>

    <!-- Copy Google App Engine Runtime JARs -->
    <target name="copyjars"
            description="Copies the App Engine JARs to the WAR.">
        <copy
                todir="${build.web.dir}/WEB-INF/lib"
                flatten="true">
            <fileset dir="${appengine.sdk}/lib/user">
                <include name="**/*.jar" />
            </fileset>
        </copy>
    </target>

    <target name="compile" depends="copyjars"
            description="Compiles Java source and copies other source files to the WAR.">
        <mkdir dir="${build.web.dir}/WEB-INF/classes" />
        <copy todir="${build.web.dir}/WEB-INF/classes">
            <fileset dir="${src.java.dir}">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
        <javac srcdir="${src.java.dir}"
                destdir="${build.web.dir}/WEB-INF/classes"
                classpathref="project.classpath"
                debug="on" />
    </target>

    <!-- Data Nucleus JDO/JPA Enhancer -->
    <target name="datanucleusenhance" depends="compile"
            description="Performs JDO/JPA enhancement on compiled data classes.">
        <enhance_war war="${build.web.dir}" api="JPA" />
    </target>

    <target name="compile-tests" depends="datanucleusenhance">
        <mkdir dir="${test.dir}/classes"/>

        <javac srcdir="${test.dir}/src" destdir="${test.dir}/classes">
            <classpath>
                <path refid="project.classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
        <junit printsummary="no" haltonfailure="no">
          <formatter type="plain" usefile="false"/>
          <classpath>
            <path refid="project.classpath"/>
          </classpath>
          <batchtest fork="yes">
            <fileset dir="${test.dir}/classes">
              <include name="**/*Test.class"/>
            </fileset>
          </batchtest>
        </junit>
    </target>

    <!-- Start Google App Engine Development Server -->
    <target name="runserver" depends="datanucleusenhance"
            description="Starts the development server.">
        <dev_appserver war="${build.web.dir}" port="${appengine.http.port}">
            <options>
                <arg line="${jvmargs}"/>
            </options>
        </dev_appserver>
    </target>

    <!-- Start Google App Engine Development Server In Debug Mode -->
    <target name="runserver-debug" depends="datanucleusenhance"
      description="Starts the development server.">
        <dev_appserver war="${build.web.dir}" port="${appengine.http.port}" >
            <options>
                <arg value="--jvm_flag=-Xdebug"/>
                <arg value="--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=${appengine.debug.port}"/>
                <arg line="${jvmargs}"/>
            </options>
        </dev_appserver>
    </target>

    <target name="upload" description="Uploads and deploys the application to App Engine.">
        <input message="Enter email" addproperty="gae-email"/>
        <input message="Enter password" addproperty="gae-password"/>

        <!-- Call dependencies here rather than with 'depends' attribute to get input first -->
        <antcall target="datanucleusenhance" />

        <java classname="com.google.appengine.tools.admin.AppCfg" inputstring="${gae-password}"
              classpath="${appengine.sdk}/lib/appengine-tools-api.jar" fork="true" failonerror="true">
            <arg value="--email=${gae-email}" />
            <arg value="--passin" />
            <arg value="update" />
            <arg value="${build.web.dir}" />
        </java>
    </target>

    <target name="upload_indexes" depends="datanucleusenhance"
            description="Uploads just the datastore index configuration to App Engine.">
        <appcfg action="update_indexes" war="${build.web.dir}" />
    </target>

    <target name="rollback" depends="datanucleusenhance"
            description="Rolls back an interrupted application update.">
        <appcfg action="rollback" war="${build.web.dir}" />
    </target>

</project>
